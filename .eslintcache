[{"C:\\Users\\Micha\\Desktop\\October2020\\studychat\\src\\index.js":"1","C:\\Users\\Micha\\Desktop\\October2020\\studychat\\src\\App.js":"2","C:\\Users\\Micha\\Desktop\\October2020\\studychat\\src\\reportWebVitals.js":"3","C:\\Users\\Micha\\Desktop\\October2020\\studychat\\src\\components\\Questions.jsx":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":4401,"mtime":1608948436579,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":1688,"mtime":1608958931781,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"puzuh3",{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Micha\\Desktop\\October2020\\studychat\\src\\index.js",[],["20","21"],"C:\\Users\\Micha\\Desktop\\October2020\\studychat\\src\\App.js",["22","23"],"import React, { useRef, useState } from 'react';\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/analytics';\r\n//[pages - components]\r\nimport Questions from './components/Questions.jsx';\r\n\r\n//auth\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp({\r\n    apiKey: \"AIzaSyDKL27IeoKoOBX7Bs2ggNg2TAK8Rexxaj4\",\r\n    authDomain: \"studychat-16364.firebaseapp.com\",\r\n    projectId: \"studychat-16364\",\r\n    storageBucket: \"studychat-16364.appspot.com\",\r\n    messagingSenderId: \"26638819191\",\r\n    appId: \"1:26638819191:web:272ff5e58586773ef54b72\",\r\n    measurementId: \"G-WTK3FYQ5XF\"\r\n  });\r\n}else {\r\n  firebase.app(); // if already initialized, use that one\r\n}\r\n\r\n\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\nconst analytics = firebase.analytics();\r\n\r\n\r\nfunction App() {\r\n\r\n  const [user] = useAuthState(auth);\r\n\r\n  return (\r\n    <Router>\r\n      <nav className=\"main-nav\">\r\n          <ul>\r\n            <li>\r\n              <Link className=\"nav-item\" to=\"/chat\">Chat</Link>\r\n            </li>\r\n            <li>\r\n              <Link className=\"nav-item\" to=\"/questions\">Questions</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      <Switch>\r\n      <Route\r\n                exact\r\n                path=\"/\"\r\n                render={() => {\r\n                    return (\r\n                      <Redirect to=\"/chat\" /> \r\n                    )\r\n                }}\r\n              />\r\n        <Route path=\"/chat\">\r\n        <div className=\"App\">\r\n          <header>\r\n            <img src=\"./open-book.svg\" alt=\"Logo\"/>\r\n            <nav className=\"main-nav\">\r\n          <ul>\r\n            <li>\r\n              <Link className=\"nav-item\" to=\"/questions\">ü§îInterview Questions</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n            <SignOut />\r\n          </header>\r\n          <section>\r\n            {user ? <ChatRoom /> : <SignIn />}\r\n          </section>\r\n        </div>\r\n        </Route>\r\n        <Route path=\"/questions\">\r\n          <Questions />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n    \r\n  );\r\n}\r\n\r\nfunction SignIn() {\r\n\r\n  const signInWithGoogle = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    auth.signInWithPopup(provider);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button className=\"sign-in\" onClick={signInWithGoogle}>Sign in with Google</button>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nfunction SignOut() {\r\n  return auth.currentUser && (\r\n    <button className=\"sign-out\" onClick={() => auth.signOut()}>Sign Out</button>\r\n  )\r\n}\r\n\r\n\r\nfunction ChatRoom() {\r\n  const dummy = useRef();\r\n  const messagesRef = firestore.collection('messages');\r\n  const query = messagesRef.orderBy('createdAt').limit(25);\r\n\r\n  const [messages] = useCollectionData(query, { idField: 'id' });\r\n\r\n  const [formValue, setFormValue] = useState('');\r\n\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { uid, photoURL } = auth.currentUser;\r\n\r\n    await messagesRef.add({\r\n      text: formValue,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n      uid,\r\n      photoURL\r\n    })\r\n\r\n    setFormValue('');\r\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\r\n  }\r\n\r\n  return (<>\r\n    <main>\r\n\r\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\r\n\r\n      <span ref={dummy}></span>\r\n\r\n    </main>\r\n\r\n    <form onSubmit={sendMessage}>\r\n\r\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"share a study hack\" />\r\n\r\n      <button type=\"submit\" disabled={!formValue}>üßêSend</button>\r\n\r\n    </form>\r\n  </>)\r\n}\r\n\r\n\r\nfunction ChatMessage(props) {\r\n  const { text, uid, photoURL } = props.message;\r\n\r\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\r\n\r\n  return (<>\r\n    <div className={`message ${messageClass}`}>\r\n      <img src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} />\r\n      <p>{text}</p>\r\n    </div>\r\n  </>)\r\n}\r\n\r\n// function Questions() {\r\n//   return (<>\r\n//     <div>\r\n//       <h1>Questions</h1>\r\n//     </div>\r\n//   </>)\r\n// }\r\n\r\nexport default App;","C:\\Users\\Micha\\Desktop\\October2020\\studychat\\src\\reportWebVitals.js",[],"C:\\Users\\Micha\\Desktop\\October2020\\studychat\\src\\components\\Questions.jsx",["24","25"],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":38,"column":7,"nodeType":"32","messageId":"33","endLine":38,"endColumn":16},{"ruleId":"34","severity":1,"message":"35","line":169,"column":7,"nodeType":"36","endLine":169,"endColumn":88},{"ruleId":"30","severity":1,"message":"37","line":3,"column":8,"nodeType":"32","messageId":"33","endLine":3,"endColumn":15},{"ruleId":"30","severity":1,"message":"38","line":4,"column":8,"nodeType":"32","messageId":"33","endLine":4,"endColumn":12},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'analytics' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Divider' is defined but never used.","'logo' is defined but never used.","no-global-assign","no-unsafe-negation"]